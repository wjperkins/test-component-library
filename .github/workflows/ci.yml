name: CI/CD

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

  approve-bump-version:
    name: Approve Version Bump PR
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'Bump Avori Component Library version')
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
      repository-projects: read

    env:
      PR_URL: ${{github.event.pull_request.html_url}}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Approve release PR
        id: approve-release
        run: |
          gh pr review "$PR_URL" --approve

  release:
    name: Release
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Bump Avori Component Library version')
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version number
        id: extract-version
        run: |
          echo "version_number=$(npm pkg get version | tr -d '\"')" >> "$GITHUB_OUTPUT"

      - name: Create Git Tag
        id: create-tag
        env:
          VERSION: ${{ steps.extract-version.outputs.version_number }}
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create GitHub Release
        env:
          VERSION: ${{ steps.extract-version.outputs.version_number }}
        run: |
          CURRENT_RELEASE="v${{ env.VERSION }}"
          echo "CURRENT_RELEASE=$CURRENT_RELEASE"
          PREVIOUS_RELEASE="$(gh release list --limit 1 | awk '{print $1}')"
          echo "PREVIOUS_RELEASE=$PREVIOUS_RELEASE"
          gh release create "$CURRENT_RELEASE" -t "$CURRENT_RELEASE" --generate-notes --notes-start-tag "$PREVIOUS_RELEASE" --verify-tag

      - name: Push to NPM
        run: |
          echo "This is a placeholder for pushing to NPM"
