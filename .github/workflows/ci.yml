name: CI/CD

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

#      - name: Install Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#          cache: "npm"
#          cache-dependency-path: "package-lock.json"
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Build
#        run: |
#          npm run build

  approve-bump-version:
    name: Approve Version Bump PR
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'Bump Avori Component Library version')
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
      repository-projects: read

    env:
      PR_URL: ${{github.event.pull_request.html_url}}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Approve release PR
        id: approve-release
        run: |
          gh pr review "$PR_URL" --approve

  release:
    name: Release
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Bump Avori Component Library version')
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version number
        id: extract-version
        run: |
          echo "version_number=$(npm pkg get version | tr -d '\"')" >> "$GITHUB_OUTPUT"

      - name: Create Git Tag
        id: create-tag
        env:
          VERSION: ${{ steps.extract-version.outputs.version_number }}
        run: |
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
